name: Statistics

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      Players:
        description: 'Array of players'
        required: false
        default: 'Exercise01AI, Exercise02AI, Exercise03AI, Exercise04AI'
      Opponents:
        description: 'Array of opponents'
        required: false
        default: 'Exercise01AI, Exercise02AI, Exercise03AI, Exercise04AI, StockfishPlayer'
      Seed:
        description: 'Random seed'
        required: false
        default: '3'
      Repetitions:
        description: 'Number of games per player pair'
        required: false
        default: '1'
      Depth:
        description: 'Search depth for Minimax algorithm'
        required: false
        default: '2'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run_statistics:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      STOCKFISH_VERSION: 14.1
      PYTHON_VERSION: 3.10.1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache external libraries
        id: cache-libraries
        uses: actions/cache@v2
        with:
          path: lib/
          key: ${{ runner.os }}-lib

      - name: Fetch required libraries if no cache was found
        if: steps.cache-libraries.outputs.cache-hit != 'true'
        run: ./scripts/setup.sh

      - name: Run statistics notebook
        run: |
          pip install notebook -r requirements.txt
          echo "Running statistics notebook"
          jupyter-execute src/Statistics.ipynb
        env:
          players:  ${{  github.event.inputs.Players  }}
          opponents:  ${{  github.event.inputs.Opponents  }}
          seed:  ${{  github.event.inputs.Seed  }}
          repetitions:  ${{  github.event.inputs.Repetitions  }}
          depth:  ${{  github.event.inputs.Depth  }}

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: games/
